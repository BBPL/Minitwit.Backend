version: "3.7"

services:
  minitwit:
    image: pkorsholm/api:monitoring
    ports:
      - "80:80"
    links:
      - db
    depends_on:
      - db
    restart: "always"
    networks:
      - backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - METRICS_ENDPOINT=/metrics
    deploy:
      replicas: 4
      # update_config:
      #   parallelism: 1
      #   delay: 10s
      # restart_policy:
      #   condition: "always"
  db:
    image: mysql
    # ports:
    #   - "11433:1433"
    container_name: "db"
    restart: "always"
    environment:
      - MYSQL_USER=user
      - MYSQL_PASSWORD=P4sSw0rd
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=minitwit
    #   ACCEPT_EULA: "Y"
    #   SA_PASSWORD: "p@55w0rd"
    volumes:
      - dbvol:/var/lib/mysql
    networks:
      - backend
    deploy:
      replicas: 1
    # healthcheck:
    #   test: ["CMD", "sqlcmd", "-U", "sa", "-P", "p@55w0rd", "-Q", "select 1"]
    #   interval: 1s
    #   retries: 20
  promswarmconnect:
    image: fn61/promswarmconnect:20200306_0847_50a70f6b
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOCKER_URL=unix:///var/run/docker.sock
      - NETWORK_NAME=minitwit_backend
    networks:
      - backend
    deploy:
      placement:
        constraints: [node.role == manager]

  prometheus:
    image: prom/prometheus
    depends_on: 
      - promswarmconnect
    ports: 
      - "9090:9090"
    restart: "always"
    networks:
      - backend
    volumes:
      - "./prometheusvol/prometheus.yml:/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana
    depends_on: 
      - prometheus
    ports: 
      - "3000:3000"
    restart: "always"
    networks:
      - backend
    

volumes:
  dbvol:

networks:
  backend:
    driver: overlay
    attachable: true
